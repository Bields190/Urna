-- ===============================
-- BANCO DE DADOS: URNA ELETRÔNICA
-- ===============================

CREATE TABLE Administrador (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    usuario TEXT UNIQUE NOT NULL,
    senha TEXT NOT NULL -- ou hash?
);

CREATE TABLE Eleicao (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    titulo TEXT NOT NULL,
    data_inicio DATE NOT NULL,  -- formato: YYYY-MM-DD
    data_fim DATE NOT NULL,
    administrador_id INTEGER NOT NULL,
    FOREIGN KEY (administrador_id) REFERENCES Administrador(id)
);

CREATE TABLE Cargo (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    nome TEXT NOT NULL,
    descricao TEXT
);

CREATE TABLE Chapa (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    nome TEXT NOT NULL,
    slogan TEXT,
    logo TEXT, -- endereço da imagem
    administrador_id INTEGER NOT NULL,
    FOREIGN KEY (administrador_id) REFERENCES Administrador(id)
);

CREATE TABLE Candidato (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    nome TEXT NOT NULL,
    cargo_id INTEGER NOT NULL,
    chapa_id INTEGER,
    FOREIGN KEY (cargo_id) REFERENCES Cargo(id),
    FOREIGN KEY (chapa_id) REFERENCES Chapa(id)
);

CREATE TABLE Eleitor (
    matricula INTEGER PRIMARY KEY AUTOINCREMENT,
    nome TEXT NOT NULL,
    email_institucional TEXT NOT NULL,
    verificado INTEGER DEFAULT 0  -- 0 = falso, 1 = verdadeiro
);

CREATE TABLE Voto (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    chapa_id INTEGER NOT NULL,
    eleitor_matricula INTEGER NOT NULL,
    eleicao_id INTEGER NOT NULL,
    FOREIGN KEY (chapa_id) REFERENCES Chapa(id),
    FOREIGN KEY (eleitor_matricula) REFERENCES Eleitor(matricula),
    FOREIGN KEY (eleicao_id) REFERENCES Eleicao(id)
);

CREATE TABLE Cedula (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    eleicao_id INTEGER NOT NULL,
    eleitor_matricula INTEGER NOT NULL,
    data_emissao DATE NOT NULL, -- formato: YYYY-MM-DD HH:MM:SS
    FOREIGN KEY (eleicao_id) REFERENCES Eleicao(id),
    FOREIGN KEY (eleitor_matricula) REFERENCES Eleitor(matricula)
);

-- Tabela opcional para guardar resultados consolidados
CREATE TABLE Resultado (
    id INTEGER PRIMARY KEY AUTOINCREMENT,
    eleicao_id INTEGER NOT NULL,
    chapa_id INTEGER NOT NULL,
    total_votos INTEGER NOT NULL,
    FOREIGN KEY (eleicao_id) REFERENCES Eleicao(id),
    FOREIGN KEY (chapa_id) REFERENCES Chapa(id)
);

-- INSERÇÕES:

-- ===============================
-- DADOS FICTÍCIOS PARA TESTE
-- ===============================

INSERT INTO Administrador (id, usuario, senha) VALUES
(1, 'limeira', 'tesi25');

-- Eleição
INSERT INTO Eleicao (id, titulo, data_inicio, data_fim, administrador_id) VALUES
(1, 'Eleição CASI 2025', '2025-10-01', '2025-10-05', 1);

-- Cargos
INSERT INTO Cargo (id, nome, descricao) VALUES
(1, 'Presidente', 'Responsável geral pelo Centro Acadêmico'),
(2, 'Vice-Presidente', 'Substitui o presidente quando necessário'),
(3, 'Diretor de Cultura', 'Coordena atividades culturais e eventos');

-- Chapas
INSERT INTO Chapa (id, nome, slogan, logo, administrador_id) VALUES
(1, 'Core 2 Quad', 'Renovar com atitude', '/images/core2quad.png', 1),
(2, 'Nova Ordem', 'Juntos pelo futuro', '/images/nova_ordem.png', 1);

-- Candidatos
INSERT INTO Candidato (id, nome, cargo_id, chapa_id) VALUES
(1, 'Ana Souza', 1, 1),
(2, 'Bruno Silva', 1, 2),
(3, 'Carla Mendes', 2, 1),
(4, 'Diego Ramos', 2, 2),
(5, 'Eduardo Lima', 3, 1);

-- Eleitores
INSERT INTO Eleitor (matricula, nome, email_institucional) VALUES
(20230300040, 'Mariana Alves', 'mariana.alves@sou.ufac.br'),
(20220300005, 'Lucas Pereira',  'lucas.pereira@sou.ufac.br'),
(20250300021, 'Isabela Freitas','isabela.freitas@sou.ufac.br'),
(20210300078, 'Gustavo Costa',  'gustavo.costa@sou.ufac.br'),
(20170300016, 'Fernanda Rocha', 'fernanda.rocha@sou.ufac.br'),
(20250300001, 'Rafael Nunes',   'rafael.nunes@sou.ufac.br');

